run
2+2
run
run fac.mo
run fuck.mo
run fac.mo
run fuck.mo
run empty.mo
run fuck.mo
run empty.mo
run fac.mo
run fuck.mo
run empty.mo
run fac.mo
run fuck.mo
run
run fac.mo
run
run fac.mo
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
run fac.mo
run fuck.mo
clean
run fuck.mo
run fac.mo
run fuck.mo
run fac.mo
run fuck.mo
run fac.mo
run fuck.mo
run fac.mo
clear
sbt clear
run test.mo
run fac.mo
run empty.mo
run fac.mo
run fuck.mo
run test.mo
run empty.mo
run test.mo
run
run fac.mo
ls
run fac.mo
run
run -i fac.mo
run -i fac.mo -i
run fac.mo -i
specs2.run UnitTest
test
compile
clear
sbt clear
test
last update
test
test:compile
test
test /home/guillaume/Bureau/Compiler Construction/skelton/src/main/scala/de/tuberlin/uebb/comp1/homework/ParserString.scala/UnitTest.scala
test /home/guillaume/Bureau/Compiler Construction/skelton/src/main/scala/de/tuberlin/uebb/comp1/homework/UnitTest.scala
test /home/guillaume/Bureau/Compiler Construction/skelton/src/main/scala/de/tuberlin/uebb/comp1/homework/UnitTest
test de.tuberlin.uebb.comp1.homework.UnitTest
test
[info] mul(999999,999999) should
test
compile
test
compile
test
run allTogether.mo
test
run test.mo -I
run test.mo -i
clear
run test.mo -i
test
run test.mo -i
run
run -unchecked
run -unchecked fac.mo
-uncheckedrun fac.mo
-unchecked run fac.mo
(run fac.mo) -unchecked
run fac.mo -unchecked
run fac.mo
run fac.mo -i
run fac.mo
run codertest.mo
run codertest.mo -i
run codertest.mo 
run codertest.mo -i
run codertest.mo
run fac.mo
run codertest.mo
run fac.mo
run codertest.mo
run fac.mo
run empty.mo
run empty.mo -i
run empty.mo
run fac.mo
run newton.mo
run newton.mo -i
run newton.mo 
test
run allTogether.mo
run
run helloworld.fumurt
def programStrParser: Parser[ProgramT] = new Regex("program") ^^ {_ => ProgramT()}
  def functionParser: Parser[FunctionT]    = new Regex("function") ^^ {_ => FunctionT()}
  def unsafeActionParser: Parser[UnsafeActionT]    = new Regex("unsafe action") ^^ {_ => UnsafeActionT()}
  def actionParser: Parser[ActionT]    = new Regex("action") ^^ {_ => ActionT()}
  def trueParser: Parser[TrueT]    = new Regex("true") ^^ {_ => TrueT()}
  def falseParser: Parser[FalseT]    = new Regex("false") ^^ {_ => FalseT()}
  def openParenthesisParser: Parser[OpenParenthesisT]    = new Regex("""\(""") ^^ {_ => OpenParenthesisT()}
  def closeParenthesisParser: Parser[CloseParenthesisT]    = new Regex("""\)""") ^^ {_ => CloseParenthesisT()}
  def openCurlyBracketParser: Parser[OpenCurlyBracketT]    = new Regex("""\{""") ^^ {_ => OpenCurlyBracketT()}
  def closeCurlyBracketParser: Parser[CloseCurlyBracketT]    = new Regex("""\}""") ^^ {_ => CloseCurlyBracketT()}
  def doubleParser: Parser[DoubleT] = new Regex("""[-+]?[0-9]*\.?[0-9]+""") ^^ {x => DoubleT(x.toDouble)}
  def intParser: Parser[IntegerT] = new Regex("""(0|[1-9]\d*)""") ^^ {x => IntegerT(x.toInt)}
  def equalParser: Parser[EqualT] = new Regex("=") ^^ {_ => EqualT()}
  def colonParser: Parser[ColonT] = new Regex(":") ^^ {_ => ColonT()}
  def commaParser: Parser[CommaT] = new Regex(",") ^^ {_ => CommaT()}
  def emptyParser: Parser[EmptyT] = new Regex("") ^^ {_ => EmptyT()}
  def newlineParser: Parser[NewlineT] = new Regex("\n") ^^ {_ => NewlineT()}
  def idParser: Parser[IdT]    = new Regex("[a-z]+") ^^ {x => IdT(x.toString)}
run helloworld.fumurt
clean
run helloworld.fumurt
run helloworld.fumur
run helloworld.fumurt
last compile:run
run helloworld.fumurt
run helloworld2.fumurt
last compile:run
run helloworld2.fumurt
run test.fumurt
run helloworld2.fumurt
run test.fumurt
quit
run test.fumurt
run errortest.fumurt
run test.fumurt
run helloworldmulti.fumurt
run synchronized.fumurt
run actionsFunctions.fumurt
run test.fumurt
run actionsFunctions.fumurt
run test.fumurt
run actionsFunctions.fumurt
run test.fumurt
run actionsFunctions.fumurt
run helloworld.fumurt
run helloworldmulti.fumurt
run synchronized.fumurt
run actionsFunctions.fumurt
run test.fumurt
run synchronized.fumurt
run helloworldmulti.fumurt
run helloworld.fumurt
run actionsFunctions.fumurt
run test.fumurt
run actionsFunctions.fumurt
run helloworld.fumurt
run helloworldmulti.fumurt
run synchronized.fumurt
run test.fumurt
run actionsFunctions.fumurt
run test.fumurt
run synchronized.fumurt
run helloworld.fumurt
run helloworldmulti.fumurt
run actionsFunctions.fumurt
run test.fumurt
run helloworldmulti.fumurt
run helloworld.fumurt
run actionsFunctions.fumurt
run test.fumurt
run actionsFunctions.fumurt
run test.fumurt
run helloworld.fumurt
run helloworldmulti.fumurt
