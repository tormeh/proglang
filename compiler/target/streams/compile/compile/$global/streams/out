[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mInitial source changes: [0m
[0m[[0mdebug[0m] [0m	removed:Set()[0m
[0m[[0mdebug[0m] [0m	added: Set()[0m
[0m[[0mdebug[0m] [0m	modified: Set(/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Main.scala, /home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala)[0m
[0m[[0mdebug[0m] [0mRemoved products: Set()[0m
[0m[[0mdebug[0m] [0mExternal API changes: API Changes: Set()[0m
[0m[[0mdebug[0m] [0mModified binary dependencies: Set()[0m
[0m[[0mdebug[0m] [0mInitial directly invalidated sources: Set(/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Main.scala, /home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala)[0m
[0m[[0mdebug[0m] [0m[0m
[0m[[0mdebug[0m] [0mSources indirectly invalidated by:[0m
[0m[[0mdebug[0m] [0m	product: Set()[0m
[0m[[0mdebug[0m] [0m	binary dep: Set()[0m
[0m[[0mdebug[0m] [0m	external source: Set()[0m
[0m[[0mdebug[0m] [0mAll initially invalidated sources: Set(/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Main.scala, /home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala)[0m
[0m[[0minfo[0m] [0mCompiling 2 Scala sources to /home/tormod/Documents/skole/spring2015/master/proglang/compiler/target/scala-2.11/classes...[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.11.6[0m
[0m[[0mdebug[0m] [0mGetting compiler-interface from component compiler for Scala 2.11.6[0m
[0m[[0mdebug[0m] [0mRunning cached compiler 63884fa0, interfacing (CompilerInterface) with Scala compiler version 2.11.6[0m
[0m[[0mdebug[0m] [0mCalling Scala compiler with arguments  (CompilerInterface):[0m
[0m[[0mdebug[0m] [0m	-feature[0m
[0m[[0mdebug[0m] [0m	-optimize[0m
[0m[[0mdebug[0m] [0m	-Xlint[0m
[0m[[0mdebug[0m] [0m	-Xfatal-warnings[0m
[0m[[0mdebug[0m] [0m	-bootclasspath[0m
[0m[[0mdebug[0m] [0m	/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/rhino.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-7-openjdk-amd64/jre/classes:/home/tormod/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.11.6.jar[0m
[0m[[0mdebug[0m] [0m	-classpath[0m
[0m[[0mdebug[0m] [0m	/home/tormod/Documents/skole/spring2015/master/proglang/compiler/target/scala-2.11/classes:/home/tormod/Documents/skole/spring2015/master/proglang/compiler/lib/machine_2.10-0.1.0 .jar:/home/tormod/.ivy2/cache/org.specs2/specs2_2.11/jars/specs2_2.11-2.3.12.jar:/home/tormod/.ivy2/cache/org.scala-lang/scala-compiler/jars/scala-compiler-2.11.0.jar:/home/tormod/.ivy2/cache/org.scala-lang/scala-reflect/jars/scala-reflect-2.11.0.jar:/home/tormod/.ivy2/cache/org.scala-lang.modules/scala-xml_2.11/bundles/scala-xml_2.11-1.0.1.jar:/home/tormod/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.11/bundles/scala-parser-combinators_2.11-1.0.3.jar:/home/tormod/.ivy2/cache/org.pegdown/pegdown/jars/pegdown-1.2.1.jar:/home/tormod/.ivy2/cache/org.parboiled/parboiled-java/jars/parboiled-java-1.1.4.jar:/home/tormod/.ivy2/cache/org.parboiled/parboiled-core/jars/parboiled-core-1.1.4.jar:/home/tormod/.ivy2/cache/org.ow2.asm/asm/jars/asm-4.1.jar:/home/tormod/.ivy2/cache/org.ow2.asm/asm-tree/jars/asm-tree-4.1.jar:/home/tormod/.ivy2/cache/org.ow2.asm/asm-analysis/jars/asm-analysis-4.1.jar:/home/tormod/.ivy2/cache/org.ow2.asm/asm-util/jars/asm-util-4.1.jar:/home/tormod/.ivy2/cache/org.scalaz/scalaz-core_2.11/bundles/scalaz-core_2.11-7.0.6.jar:/home/tormod/.ivy2/cache/org.scalaz/scalaz-concurrent_2.11/bundles/scalaz-concurrent_2.11-7.0.6.jar:/home/tormod/.ivy2/cache/org.scalaz/scalaz-effect_2.11/bundles/scalaz-effect_2.11-7.0.6.jar:/home/tormod/.ivy2/cache/org.scalacheck/scalacheck_2.11/jars/scalacheck_2.11-1.11.3.jar:/home/tormod/.ivy2/cache/org.scala-sbt/test-interface/jars/test-interface-1.0.jar:/home/tormod/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar:/home/tormod/.ivy2/cache/org.mockito/mockito-core/jars/mockito-core-1.9.5.jar:/home/tormod/.ivy2/cache/org.objenesis/objenesis/jars/objenesis-1.0.jar:/home/tormod/.ivy2/cache/junit/junit/jars/junit-4.11.jar:/home/tormod/.ivy2/cache/org.specs2/classycle/jars/classycle-1.4.3.jar[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:209: not found: value containingdefinition[0m
[0m[[31merror[0m] [0m          checkCallarg(TypeT("Boolean"), arglist(0).argument, containingdefinition, arguments, basicFunctions, inSameDefinition)++[0m
[0m[[31merror[0m] [0m                                                              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:209: not found: value arguments[0m
[0m[[31merror[0m] [0m          checkCallarg(TypeT("Boolean"), arglist(0).argument, containingdefinition, arguments, basicFunctions, inSameDefinition)++[0m
[0m[[31merror[0m] [0m                                                                                    ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:209: not found: value basicFunctions[0m
[0m[[31merror[0m] [0m          checkCallarg(TypeT("Boolean"), arglist(0).argument, containingdefinition, arguments, basicFunctions, inSameDefinition)++[0m
[0m[[31merror[0m] [0m                                                                                               ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:209: not found: value inSameDefinition[0m
[0m[[31merror[0m] [0m          checkCallarg(TypeT("Boolean"), arglist(0).argument, containingdefinition, arguments, basicFunctions, inSameDefinition)++[0m
[0m[[31merror[0m] [0m                                                                                                               ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:219: not enough arguments for method apply: (position: scala.util.parsing.input.Position, message: String)fumurtCompiler.FumurtError in object FumurtError.[0m
[0m[[31merror[0m] [0mUnspecified value parameter message.[0m
[0m[[31merror[0m] [0m      case None => List(FumurtError("No arguments expected, but "+namedcallargs.length+" were given"))[0m
[0m[[31merror[0m] [0m                                   ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:222: value length is not a member of fumurtCompiler.Arguments[0m
[0m[[31merror[0m] [0m        if (defargs.length != value.length) [0m
[0m[[31merror[0m] [0m                    ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:222: not found: value value[0m
[0m[[31merror[0m] [0m        if (defargs.length != value.length) [0m
[0m[[31merror[0m] [0m                              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:224: not found: value y[0m
[0m[[31merror[0m] [0m          List(FumurtError(y.pos, "expected "+defargs.length+" arguments. Got "+value.length+" arguments"))[0m
[0m[[31merror[0m] [0m                           ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:224: value length is not a member of fumurtCompiler.Arguments[0m
[0m[[31merror[0m] [0m          List(FumurtError(y.pos, "expected "+defargs.length+" arguments. Got "+value.length+" arguments"))[0m
[0m[[31merror[0m] [0m                                                      ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:224: not found: value value[0m
[0m[[31merror[0m] [0m          List(FumurtError(y.pos, "expected "+defargs.length+" arguments. Got "+value.length+" arguments"))[0m
[0m[[31merror[0m] [0m                                                                                ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:228: not found: value value[0m
[0m[[31merror[0m] [0m          if(!value.groupBy(x=>x.id.value).filter((x,y)=>y.length>1).isEmpty) //ensure uniqueness of arguments[0m
[0m[[31merror[0m] [0m              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:230: not found: value y[0m
[0m[[31merror[0m] [0m            List(FumurtError(y.pos, "two or more arguments were given with the same name"))[0m
[0m[[31merror[0m] [0m                             ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:235: not found: value value[0m
[0m[[31merror[0m] [0m            for(i<-0 until value.length)[0m
[0m[[31merror[0m] [0m                           ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:237: not found: value value[0m
[0m[[31merror[0m] [0m              individualargumenterrors ++ (if(value(i).id.value != defargs(i).id.value) [0m
[0m[[31merror[0m] [0m                                              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:237: fumurtCompiler.Arguments does not take parameters[0m
[0m[[31merror[0m] [0m              individualargumenterrors ++ (if(value(i).id.value != defargs(i).id.value) [0m
[0m[[31merror[0m] [0m                                                                          ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:239: not found: value y[0m
[0m[[31merror[0m] [0m                  List(FumurtError(y.pos, "Wrong argument name. Argument in definition named "+defargs(i).id.value+". In calling named "+value(i).id.value ))[0m
[0m[[31merror[0m] [0m                                   ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:239: fumurtCompiler.Arguments does not take parameters[0m
[0m[[31merror[0m] [0m                  List(FumurtError(y.pos, "Wrong argument name. Argument in definition named "+defargs(i).id.value+". In calling named "+value(i).id.value ))[0m
[0m[[31merror[0m] [0m                                                                                                      ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:239: not found: value value[0m
[0m[[31merror[0m] [0m                  List(FumurtError(y.pos, "Wrong argument name. Argument in definition named "+defargs(i).id.value+". In calling named "+value(i).id.value ))[0m
[0m[[31merror[0m] [0m                                                                                                                                         ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:243: too many arguments for method checkCallarg: (expectedtype: fumurtCompiler.TypeT, arg: fumurtCompiler.Callarg, containingdefinition: fumurtCompiler.DefLhs, arguments: Option[List[fumurtCompiler.DefLhs]], basicFunctions: List[fumurtCompiler.DefLhs], inSameDefinition: List[fumurtCompiler.DefLhs])List[fumurtCompiler.FumurtError][0m
[0m[[31merror[0m] [0m                  checkCallarg(defargs(i).typestr, value(i).argument, containingdefinition, arguments:Option[List[DefLhs]], basicFunctions:List[DefLhs], inSameDefinition:List[DefLhs], currentErrors:List[FumurtError])[0m
[0m[[31merror[0m] [0m                              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:266: value returntype is not a member of Either[String,fumurtCompiler.DefLhs][0m
[0m[[31merror[0m] [0m        if(expectedtype.value != thingdef.returntype.value)[0m
[0m[[31merror[0m] [0m                                          ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:268: value returntype is not a member of Either[String,fumurtCompiler.DefLhs][0m
[0m[[31merror[0m] [0m          List(FumurtError(c.pos, "Expected type "+expectedtype.value+". Got "+thingdef.returntype.value))[0m
[0m[[31merror[0m] [0m                                                                                        ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:276: value returntype is not a member of Either[String,fumurtCompiler.DefLhs][0m
[0m[[31merror[0m] [0m        val resulterrors = if(expectedtype.value != functioncallarg.returntype.value)[0m
[0m[[31merror[0m] [0m                                                                    ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:278: value returntype is not a member of Either[String,fumurtCompiler.DefLhs][0m
[0m[[31merror[0m] [0m          List(FumurtError(c.pos, "Expected function to return argument of type "+expectedtype.value+". Got "+functioncallarg.returntype.value))[0m
[0m[[31merror[0m] [0m                                                                                                                              ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:282: too many arguments for method checkstatement: (tocheck: fumurtCompiler.Statement, containingdefinition: fumurtCompiler.DefLhs, arguments: Option[List[fumurtCompiler.DefLhs]], basicFunctions: List[fumurtCompiler.DefLhs], inSameDefinition: List[fumurtCompiler.DefLhs])List[fumurtCompiler.FumurtError][0m
[0m[[31merror[0m] [0m        val callerrors = checkstatement(c, containingdefinition, arguments, basicFunctions, inSameDefinition, currentErrors)[0m
[0m[[31merror[0m] [0m                                       ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:290: not found: value basicstatement[0m
[0m[[31merror[0m] [0m    basicstatement match[0m
[0m[[31merror[0m] [0m    ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:302: not enough arguments for method checkexpressions: (tree: List[fumurtCompiler.Expression], containingdefinition: Option[fumurtCompiler.Definition], containingdefinitionarguments: Option[List[fumurtCompiler.DefLhs]], basicFunctions: List[fumurtCompiler.DefLhs])List[fumurtCompiler.FumurtError].[0m
[0m[[31merror[0m] [0mUnspecified value parameters containingdefinitionarguments, basicFunctions.[0m
[0m[[31merror[0m] [0m    val undererrors = checkexpressions(tocheck.rightside.expressions, tocheck )[0m
[0m[[31merror[0m] [0m                                      ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:305: value beginsWith is not a member of String[0m
[0m[[31merror[0m] [0m      case ActionT() => if(!tocheck.leftside.id.value.beginsWith("action")){List(FumurtError(tocheck.pos, "Name of action is not prefixed with \"action\""))} else{List()}[0m
[0m[[31merror[0m] [0m                                                      ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:306: value beginsWith is not a member of String[0m
[0m[[31merror[0m] [0m      case ThreadT() => if(!tocheck.leftside.id.value.beginsWith("thread")){List(FumurtError(tocheck.pos, "Name of thread is not prefixed with \"thread\""))} else{List()}[0m
[0m[[31merror[0m] [0m                                                      ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:308: not found: value ValueY[0m
[0m[[31merror[0m] [0m      case ValueY() => List()[0m
[0m[[31merror[0m] [0m           ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:316: wrong number of arguments for pattern fumurtCompiler.DefLhs(description: fumurtCompiler.DefDescriptionT,id: fumurtCompiler.IdT,args: Option[fumurtCompiler.Arguments],returntype: fumurtCompiler.TypeT)[0m
[0m[[31merror[0m] [0m        case Some(DefLhs(ValueT(),_))=> List(FumurtError(tocheck.pos, "actions cannot be defined in values"))[0m
[0m[[31merror[0m] [0m                        ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:317: wrong number of arguments for pattern fumurtCompiler.DefLhs(description: fumurtCompiler.DefDescriptionT,id: fumurtCompiler.IdT,args: Option[fumurtCompiler.Arguments],returntype: fumurtCompiler.TypeT)[0m
[0m[[31merror[0m] [0m        case Some(DefLhs(FunctionT(),_))=> List(FumurtError(tocheck.pos, "actions cannot be defined in  functions"))[0m
[0m[[31merror[0m] [0m                        ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:320: pattern type is incompatible with expected type;[0m
[0m[[31merror[0m] [0m found   : fumurtCompiler.ValueT.type[0m
[0m[[31merror[0m] [0m required: fumurtCompiler.DefLhs[0m
[0m[[31merror[0m] [0mNote: if you intended to match against the class, try `case _: ValueT`[0m
[0m[[31merror[0m] [0m      case FunctionT() => containingdefinition match{ case Some(ValueT) => List(FumurtError(tocheck.pos, "functions cannot be defined in values")); case _=> List()}[0m
[0m[[31merror[0m] [0m                                                                ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:347: value args is not a member of List[fumurtCompiler.DefLhs][0m
[0m[[31merror[0m] [0m    val argsres = arguments match{ case Some(args)=>args.args.filter(x=>x.id.value==searschFor); case None=>List():List[DefLhs]}[0m
[0m[[31merror[0m] [0m                                                         ^[0m
[0m[[31merror[0m] [0m/home/tormod/Documents/skole/spring2015/master/proglang/compiler/src/main/scala/Typechecker.scala:209: postfix operator ++ should be enabled[0m
[0m[[31merror[0m] [0mby making the implicit value scala.language.postfixOps visible.[0m
[0m[[31merror[0m] [0mThis can be achieved by adding the import clause 'import scala.language.postfixOps'[0m
[0m[[31merror[0m] [0mor by setting the compiler option -language:postfixOps.[0m
[0m[[31merror[0m] [0mSee the Scala docs for value scala.language.postfixOps for a discussion[0m
[0m[[31merror[0m] [0mwhy the feature should be explicitly enabled.[0m
[0m[[31merror[0m] [0m          checkCallarg(TypeT("Boolean"), arglist(0).argument, containingdefinition, arguments, basicFunctions, inSameDefinition)++[0m
[0m[[31merror[0m] [0m                                                                                                                                ^[0m
[0m[[31merror[0m] [0m34 errors found[0m
[0m[[0mdebug[0m] [0mCompilation failed (CompilerInterface)[0m
[0m[[31merror[0m] [0m(compile:[31mcompile[0m) Compilation failed[0m
